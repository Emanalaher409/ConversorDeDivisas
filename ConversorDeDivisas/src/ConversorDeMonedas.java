


import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;




/**
 *
 * @author Emanuel
 */
public class ConversorDeMonedas extends javax.swing.JFrame {

    /**
     * Creates new form ConversorDeMonedas
     */
    public ConversorDeMonedas() {
        initComponents();
       // setIconImage(getIconImage());
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        SetImageLabel(ImagenCambio, "src/Imagenes/cambio2.jpg");
        rsscalelabel.RSScaleLabel.setScaleLabel(ImagenCambio, "src/Imagenes/cambio2.png");
      
    }
    
   public void SetImageLabel(JLabel labelname, String root){
       ImageIcon image = new ImageIcon(root);
       Icon icono = new ImageIcon( 
               image.getImage().getScaledInstance(
                       labelname.getWidth(), labelname.getHeight(),Image.SCALE_DEFAULT ));
            }
    
    //COLORES DE LOS PANELES
    class jPanelGradientAmarillo extends JPanel{
  
        protected void paintComponent(Graphics g){
        Graphics2D g2d= (Graphics2D)g; 
        int With = getWidth();
        int Height = getHeight();
        Color color1 = new Color(239, 184, 16);
        Color color2 = new Color(255, 255, 0);
       GradientPaint gp   = new GradientPaint(0,0,color2,180,Height,color1);
       g2d.setPaint(gp);
       g2d.fillRect(0, 0, With, Height);
   }
}
    class jPanelGradientGRIS extends JPanel{
  
        protected void paintComponent(Graphics g){
        Graphics2D g2d= (Graphics2D)g; 
        int With = getWidth();
        int Height = getHeight();
        Color color1 = new Color(192, 192, 192);
        Color color2 = new Color(245, 245, 245);
       GradientPaint gp   = new GradientPaint(0,0,color2,180,Height,color1);
       g2d.setPaint(gp);
       g2d.fillRect(0, 0, With, Height);
   }
}
    //coinmarketcap api key b79140c9-b315-47a1-a01a-6b01403af830
   

    
    
    
    
    
//ICONO DEL CONVESOR
    @Override
    public Image getIconImage(){
        Image retValue =Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/exchange.png"));
       return retValue;
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new jPanelGradientGRIS();
        ListaMonedasIzquierda = new javax.swing.JComboBox<>();
        MonedasAConvertir = new javax.swing.JTextField();
        BotonConvertir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Moneda2 = new javax.swing.JLabel();
        ListaMonedasDerecha = new javax.swing.JComboBox<>();
        jPanel2 = new jPanelGradientAmarillo();
        jLabel1 = new javax.swing.JLabel();
        MostrarCambio = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Moneda1 = new javax.swing.JLabel();
        ImagenCambio = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(getIconImage());
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
            public void windowDeiconified(java.awt.event.WindowEvent evt) {
                formWindowDeiconified(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ListaMonedasIzquierda.setBackground(new java.awt.Color(204, 255, 204));
        ListaMonedasIzquierda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EUR", "MXN", "USD", "GBP", "JPY", "KRW" }));
        ListaMonedasIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListaMonedasIzquierdaActionPerformed(evt);
            }
        });
        jPanel1.add(ListaMonedasIzquierda, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 160, 30));

        MonedasAConvertir.setText("Cantidad  a convertir");
        MonedasAConvertir.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                MonedasAConvertirFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                MonedasAConvertirFocusLost(evt);
            }
        });
        MonedasAConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonedasAConvertirActionPerformed(evt);
            }
        });
        MonedasAConvertir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MonedasAConvertirKeyReleased(evt);
            }
        });
        jPanel1.add(MonedasAConvertir, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 150, 30));

        BotonConvertir.setBackground(new java.awt.Color(153, 255, 153));
        BotonConvertir.setText("Convertir");
        BotonConvertir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonConvertirActionPerformed(evt);
            }
        });
        jPanel1.add(BotonConvertir, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 140, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("A");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, -1, 20));

        Moneda2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Moneda2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(Moneda2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 130, 120, 30));

        ListaMonedasDerecha.setBackground(new java.awt.Color(204, 255, 204));
        ListaMonedasDerecha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EUR", "MXN", "USD", "GBP", "JPY", "KRW" }));
        ListaMonedasDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListaMonedasDerechaActionPerformed(evt);
            }
        });
        jPanel1.add(ListaMonedasDerecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 80, 160, 30));

        jPanel2.setBackground(new java.awt.Color(241, 223, 16));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(51, 51, 51));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Conversor De Monedas");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 340, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 50));

        MostrarCambio.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel1.add(MostrarCambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, 80, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("De");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, 20));

        Moneda1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Moneda1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(Moneda1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 80, 30));
        jPanel1.add(ImagenCambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 90, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
        );

        setBounds(0, 0, 566, 250);
    }// </editor-fold>//GEN-END:initComponents

    private void ListaMonedasDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListaMonedasDerechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ListaMonedasDerechaActionPerformed

    private void ListaMonedasIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListaMonedasIzquierdaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ListaMonedasIzquierdaActionPerformed

    private void MonedasAConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonedasAConvertirActionPerformed
   
    }//GEN-LAST:event_MonedasAConvertirActionPerformed

    private void MonedasAConvertirFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MonedasAConvertirFocusGained
        MonedasAConvertir.setText("");
    }//GEN-LAST:event_MonedasAConvertirFocusGained

    private void BotonConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonConvertirActionPerformed
        String monedasIzquierda = ListaMonedasIzquierda.getSelectedItem().toString();
        String monedasDerecha = ListaMonedasDerecha.getSelectedItem().toString();
        
        //Checar que el texto ingresado sean solo monedas
        if (MonedasAConvertir.getText().matches("^[0-9]*\\.?[0-9]+$")) {
        
        
            Double cantidadDeMonedas = Double.parseDouble(MonedasAConvertir.getText().toString());
            Double conversion;

            //CONVIRTIENDO MONEDAS
            //EUR
            if (monedasIzquierda == "EUR" && monedasDerecha == "MXN") {
                //  conversion=cantidadDeMonedas*18.95;
              // MostrarCambio.setText(realizaroperacion(cantidadDeMonedas, 17.96).toString());
                imprimirconversion(cantidadDeMonedas, 19.70,monedasIzquierda,monedasDerecha);
               
            }
            if (monedasIzquierda == "EUR" && monedasDerecha == "USD") {

                 imprimirconversion(cantidadDeMonedas, 1.06,monedasIzquierda,monedasDerecha);
              
            }
            if (monedasIzquierda == "EUR" && monedasDerecha == "GBP") {

                 imprimirconversion(cantidadDeMonedas, 0.88,monedasIzquierda,monedasDerecha);

            }
            if (monedasIzquierda == "EUR" && monedasDerecha == "JPY") {

                 imprimirconversion(cantidadDeMonedas, 143.54,monedasIzquierda,monedasDerecha);

            }
            if (monedasIzquierda == "EUR" && monedasDerecha == "KRW") {

                 imprimirconversion(cantidadDeMonedas, 1405.13,monedasIzquierda,monedasDerecha);

            }
            //USD
            if (monedasIzquierda == "USD" && monedasDerecha == "MXN") {

                 imprimirconversion(cantidadDeMonedas, 17.96,monedasIzquierda,monedasDerecha);

            }
            if (monedasIzquierda == "USD" && monedasDerecha == "EUR") {
                imprimirconversion(cantidadDeMonedas, 0.95,monedasIzquierda,monedasDerecha);
            }
             if (monedasIzquierda == "USD" && monedasDerecha == "GBP") {
                 imprimirconversion(cantidadDeMonedas, 0.83,monedasIzquierda,monedasDerecha);
             }
             if (monedasIzquierda == "USD" && monedasDerecha == "JPY") {
                 imprimirconversion(cantidadDeMonedas, 134.95,monedasIzquierda,monedasDerecha);
             }
             if (monedasIzquierda == "USD" && monedasDerecha == "KRW") {
                 imprimirconversion(cantidadDeMonedas, 1320.19,monedasIzquierda,monedasDerecha);
             }
            //MXN
            if (monedasIzquierda == "MXN" && monedasDerecha == "USD") {
                 imprimirconversion(cantidadDeMonedas, 0.056,monedasIzquierda,monedasDerecha);
            }
            if (monedasIzquierda == "MXN" && monedasDerecha == "EUR") {
                 imprimirconversion(cantidadDeMonedas, 0.053,monedasIzquierda,monedasDerecha);
            }
            if (monedasIzquierda == "MXN" && monedasDerecha == "GBP") {
                 imprimirconversion(cantidadDeMonedas, 0.045,monedasIzquierda,monedasDerecha);
             }
            if (monedasIzquierda == "MXN" && monedasDerecha == "JPY") {
                 imprimirconversion(cantidadDeMonedas, 7.29,monedasIzquierda,monedasDerecha);
            }
            if (monedasIzquierda == "MXN" && monedasDerecha == "KRW") {
                 imprimirconversion(cantidadDeMonedas, 71.38,monedasIzquierda,monedasDerecha);
            }
            
            //LIBRAS ESTERLINAS
            if (monedasIzquierda == "GBP" && monedasDerecha == "MXN") {

                 imprimirconversion(cantidadDeMonedas, 22.26,monedasIzquierda,monedasDerecha);
                
            }
            if (monedasIzquierda == "GBP" && monedasDerecha == "USD") {

                 imprimirconversion(cantidadDeMonedas, 1.20,monedasIzquierda,monedasDerecha);
                
            }
            if (monedasIzquierda == "GBP" && monedasDerecha == "EUR") {

                 imprimirconversion(cantidadDeMonedas, 1.13,monedasIzquierda,monedasDerecha);
                
            }
            
            if (monedasIzquierda == "GBP" && monedasDerecha == "JPY") {

                 imprimirconversion(cantidadDeMonedas, 162.12,monedasIzquierda,monedasDerecha);
                
            }
            if (monedasIzquierda == "GBP" && monedasDerecha == "KRW") {

                 imprimirconversion(cantidadDeMonedas, 1588,monedasIzquierda,monedasDerecha);
                
            }
            
            
            //JPY YEN JAPONES
            if (monedasIzquierda == "JPY" && monedasDerecha == "MXN") {

                 imprimirconversion(cantidadDeMonedas, 0.14,monedasIzquierda,monedasDerecha);
                
            }
            if (monedasIzquierda == "JPY" && monedasDerecha == "USD") {

                 imprimirconversion(cantidadDeMonedas, 0.0074,monedasIzquierda,monedasDerecha);
                
            }
           if (monedasIzquierda == "JPY" && monedasDerecha == "EUR") {

                 imprimirconversion(cantidadDeMonedas, 0.0070,monedasIzquierda,monedasDerecha );
                
            }
           
           if (monedasIzquierda == "JPY" && monedasDerecha == "GBP") {

                 imprimirconversion(cantidadDeMonedas, 0.0062,monedasIzquierda,monedasDerecha );
                
            }
           
           if (monedasIzquierda == "JPY" && monedasDerecha == "KRW") {

                 imprimirconversion(cantidadDeMonedas, 9.79,monedasIzquierda,monedasDerecha );
                
            }
           //KRW WON SURCOREANO
           if (monedasIzquierda == "KRW" && monedasDerecha == "MXN") {

                 imprimirconversion(cantidadDeMonedas, 0.014,monedasIzquierda,monedasDerecha );
                
            }
           if (monedasIzquierda == "KRW" && monedasDerecha == "USD") {

                 imprimirconversion(cantidadDeMonedas, 0.00076,monedasIzquierda,monedasDerecha );
                
            }
            if (monedasIzquierda == "KRW" && monedasDerecha == "EUR") {

                 imprimirconversion(cantidadDeMonedas, 0.00071,monedasIzquierda,monedasDerecha );
                
            }
            if (monedasIzquierda == "KRW" && monedasDerecha == "GBP") {

                 imprimirconversion(cantidadDeMonedas, 0.00063,monedasIzquierda,monedasDerecha );
                
            }
            if (monedasIzquierda == "KRW" && monedasDerecha == "JPY") {

                 imprimirconversion(cantidadDeMonedas, 0.10,monedasIzquierda,monedasDerecha);
                
            }

//Verificar que no use las mismas monedas
           
  else if (monedasIzquierda == monedasDerecha ) {
               
            
            JOptionPane.showMessageDialog(null, "Porfavor convierta solo a monedas diferentes", "No tiene sentido", JOptionPane.PLAIN_MESSAGE,  icono("/Imagenes/interrogo.png",90,80));
  }
        } 
        // si esta en blanco o contiene caracteres invalidos entonces
        
        else {
           JOptionPane.showMessageDialog(null, "No se permiten caracteres especiales,letras o dejar el espacio en blanco");
        }
//MonedasAConvertir.setDocument(new LimitedTextField(7));
    }//GEN-LAST:event_BotonConvertirActionPerformed
public Icon icono(String path, int Width, int Height){
    Icon img = new ImageIcon(new ImageIcon(getClass().getResource(path)).getImage().getScaledInstance(Width, Height, java.awt.Image.SCALE_SMOOTH ));
 return img;}
    
    private void MonedasAConvertirFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MonedasAConvertirFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_MonedasAConvertirFocusLost

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
       
                // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
  // TODO add your handling code here:
  if (Menus.conversoresmonedas==1) {
            Menus.conversoresmonedas--;
                System.out.println("Conversor de monedas cerrado ");
            }else{
      
  }
           
            
    }//GEN-LAST:event_formWindowClosing

    private void formWindowDeiconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeiconified
      
    }//GEN-LAST:event_formWindowDeiconified

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
            
    }//GEN-LAST:event_formWindowDeactivated

    private void MonedasAConvertirKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MonedasAConvertirKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_MonedasAConvertirKeyReleased
    public Double realizaroperacion(double cantidadDeMonedas, double Cambio) {
        double Resultado = cantidadDeMonedas * Cambio;
        return Resultado;
    }
    //El metodo llama al otro metodo realuzaroperación para imprimir solamente el string
    public void imprimirconversion(double cantidadDeMonedas, double Cambio,String monedasIzquierda,String monedasDerecha){
     String Resultado = realizaroperacion(cantidadDeMonedas, Cambio).toString();
        MostrarCambio.setText(Resultado);
         Moneda1.setText(monedasIzquierda+" =");
          Moneda2.setText(monedasDerecha);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConversorDeMonedas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConversorDeMonedas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConversorDeMonedas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversorDeMonedas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConversorDeMonedas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonConvertir;
    private javax.swing.JLabel ImagenCambio;
    private javax.swing.JComboBox<String> ListaMonedasDerecha;
    private javax.swing.JComboBox<String> ListaMonedasIzquierda;
    private javax.swing.JLabel Moneda1;
    private javax.swing.JLabel Moneda2;
    private javax.swing.JTextField MonedasAConvertir;
    private javax.swing.JLabel MostrarCambio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
